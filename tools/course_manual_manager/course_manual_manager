#!/usr/bin/env -S BUNDLE_GEMFILE=/script/Gemfile bundle exec ruby

require 'readline'
require 'slop'
require 'yaml'
require_relative 'lib/course_manual_manager'

CONFIG_FILE_NAME = ".publish.yml"

def prompt_for(prompt)
  Readline.readline("#{prompt}: ").tap do |val|
    val.rstrip!
    abort("#{prompt} not specified") if val.empty?
  end
end

cli_opts =
  begin
    Slop.parse do |o|
      o.boolean "--delete", "Delete draft"
      o.boolean "--upload", "Upload draft (implies --delete)"
      o.boolean "--publish", "Publish draft"

      o.on "-h", "--help" do
        puts o.to_s
        puts "Specifying no options implies --delete --upload --publish"
        exit 1
      end
    end
  rescue Slop::Error => e
    puts "#{e.to_s} (try --help)"
    exit 1
  end.to_hash.symbolize_keys

cli_opts.merge!(
  delete: true,
  upload: true,
  publish: true
) unless cli_opts.any? {|k,v| v == true}

opts =
  if File.exist?(CONFIG_FILE_NAME)
    YAML.load_file(CONFIG_FILE_NAME).symbolize_keys
  else
    puts "Creating configuration file in #{File.join(Dir.pwd, CONFIG_FILE_NAME)}."
    {
      html_file: prompt_for("Path to HTML file"),
      app_hostname: prompt_for("Course Manager hostname (e.g. customername.skytap-portal.com)"),
      api_key: prompt_for("Course Manager API key"),
      api_secret: prompt_for("Course Manager API secret"),
      course_id: prompt_for("Target course's numeric ID (from end of course URL)"),
    }
  end

CourseManualManager.new(**opts.to_hash.merge(cli_opts)).publish

File.write(CONFIG_FILE_NAME, opts.stringify_keys.to_yaml)