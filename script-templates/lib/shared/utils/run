#!/bin/bash

# Copyright 2022 Skytap Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cd $(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)/..

source utils/_setup

echo -e "\n====== Running build ======"
[ -f utils/build ] && utils/build

echo -e "\n====== Setting up runtime environment ======"
METADATA_SERVER_IMAGE=ghcr.io/mhgoldman/course_manager_metadata_stub_server:0.1

if [ -n "$CONTROL_URL" ]; then
  CONTROL_URL_PARAM="-e CONTROL_URL=$CONTROL_URL"
fi

if [ -d "$PWD/lib/stub_data" ]; then
  STUB_DATA_MOUNT_PARAM="-v $PWD/lib/stub_data:/metadata_server/lib/stub_data"
fi

METADATA_SERVER_CONTAINER_ID=$($DOCKER run --rm -d --name skytap-metadata-$RANDOM \
  $STUB_DATA_MOUNT_PARAM $CONTROL_URL_PARAM $METADATA_SERVER_IMAGE)

set +e

METADATA_SERVER_IP=$(
  $DOCKER inspect --format '{{ .NetworkSettings.IPAddress }}' $METADATA_SERVER_CONTAINER_ID 2>/dev/null ||
  $DOCKER inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $METADATA_SERVER_CONTAINER_ID 2>/dev/null
)

if [ -n "$METADATA_SERVER_IP" ]; then
  METADATA_SERVER_HOST_PARAM="--add-host skytap-metadata:$METADATA_SERVER_IP"
else
  echo "Warning: Could not determine metadata stub server IP address. Metadata service calls will not work."
fi

echo -e "\n====== Running script ======"
$DOCKER run $METADATA_SERVER_HOST_PARAM --rm -v $PWD:/tmp/course_script -w /tmp/course_script $IMAGE_NAME $COMMAND $ARGS

echo -e "\n====== Cleaning up runtime environment ======"
$DOCKER rm -f $METADATA_SERVER_CONTAINER_ID > /dev/null

echo