#!/bin/bash

# Copyright 2022 Skytap Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

pushd $(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)/.. > /dev/null

DOCKER=$(which podman || which docker)
[ -n "$DOCKER" ] || (echo "docker or podman is required" && exit 1)

IMAGE_NAME_LINE=$(cat config.yml|grep image_name)
IMAGE_NAME=$(echo ${IMAGE_NAME_LINE#*:}|xargs)

COMMAND_LINE=$(cat config.yml|grep command)
COMMAND=$(echo ${COMMAND_LINE#*:}|xargs)

ARGS_LINE=$(cat config.yml|grep args)
ARGS=$(echo ${ARGS_LINE#*:}|xargs)

[ -f utils/build ] && utils/build

METADATA_SERVER_IMAGE=ghcr.io/mhgoldman/course_manager_metadata_stub_server:0.1
SCRIPT_NET_NAME=cm-script-net

if [ -n "$CONTROL_URL" ]; then
  CONTROL_URL_PARAM="-e CONTROL_URL=$CONTROL_URL"
fi

$DOCKER network inspect $SCRIPT_NET_NAME > /dev/null 2>&1 || $DOCKER network create $SCRIPT_NET_NAME

METADATA_SERVER_CONTAINER_ID=$($DOCKER run --rm -d --net $SCRIPT_NET_NAME --name skytap-metadata \
  --mount type=bind,source=$PWD/lib/stub_data/metadata.json.erb,target=/metadata_server/metadata.json.erb,readonly \
  --mount type=bind,source=$PWD/lib/stub_data/control_data.json,target=/metadata_server/control_data.json,readonly \
  $CONTROL_URL_PARAM $METADATA_SERVER_IMAGE)

set +e

$DOCKER run --net $SCRIPT_NET_NAME --rm -v $PWD:/tmp/course_script -w /tmp/course_script $IMAGE_NAME $COMMAND $ARGS

$DOCKER rm -f $METADATA_SERVER_CONTAINER_ID > /dev/null 2>&1

popd > /dev/null